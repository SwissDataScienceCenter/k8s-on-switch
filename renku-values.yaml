## Configuration file for deploying the renku chart at http://renku.mydomain.ch
---

_variables_switchboard:
  mainURL:            &mainURL            renku.mydomain.ch
  baseURL:            &baseURL            https://renku.mydomain.ch
  #minioName:          &minioName          minio.mydomain.ch
  #keycloakURL:        &keycloakURL        https://keycloak.mydomain.ch
  registryName:       &registryName       registry.renku.mydomain.ch
  registryURL:        &registryURL        https://registry.renku.mydomain.ch
  gitlabURL:          &gitlabURL          https://renku.mydomain.ch/gitlab
  jupyterhubURL:      &jupyterhubURL      https://renku.mydomain.ch/jupyterhub
  #jupyterhubAuthCallbackUrl: &jupyterhub_gitlab_callbackUrl https://renku.mydomain.ch/jupyterhub/hub/oauth_callback
  gatewayURL:         &gatewayURL         https://renku.mydomain.ch/api
  oauth_redirect_uri: &oauth_redirect_uri https://renku.mydomain.ch/api/auth/jupyterhub/token
  ingress_tls:        &ingress_tls        renku-mydomain-ch-tls           ## RFC1123 compliant name, no underscores please
  registry_tls:       &registry_tls       registry-renku-mydomain-ch-tls  ## RFC1123 compliant name, no underscores please

credentials:
  pass101: &global_gitlab_clientSecret                      f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass102: &global_gitlab_postgresPassword                  f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass103: &global_gitlab_sudoToken                         f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass104: &global_keycloak_postgresPassword                f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass105: &global_jupyterhub_postgresPassword              f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass106: &global_graph_tokenRepository                    f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass107: &global_graph_dbEventLog                         f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass108: &global_gateway_clientSecret                     719ad767-175b-40d0-9f34-6fdd9b0b894b
  pass109: &global_gateway_gitlabClientSecret               f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass110: &global_gateway_gitlabClientId                   f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass201: &gitlab_password                                 f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass202: &gitlab_sharedRunnersRegistrationToken           f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass301: &keycloak_password                               f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass401: &postgresql_postgresPassword                     f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass501: &nb_jupyterhub_hub_cookieSecret                  f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass502: &nb_jupyterhub_hub_db_url                        postgres+psycopg2://jupyterhub:f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b@renku-postgresql:5432/jupyterhub
  pass503: &nb_jupyterhub_hub_services_notebooks_apiToken   f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass504: &nb_jupyterhub_hub_services_gateway_apiToken     f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass505: &nb_jupyterhub_proxy_secretToken                 f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass506: &nb_jupyterhub_auth_state_cryptoKey              f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass507: &nb_jupyterhub_auth_gitlab_clientId              f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass508: &nb_jupyterhub_auth_gitlab_clientSecret          f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b
  pass601: &gateway_secretKey                               f0308d6e4fa76df47fbbc6d1dcb00aa0bea5874d11aef2b05385e6f67205431b

defaultResources: &defaultResources
  requests:
    cpu: 200m
    memory: 512Mi
  limits:
    cpu: 200m
    memory: 512Mi

global:
  gitlab:
    clientSecret: *global_gitlab_clientSecret
    postgresDatabase: gitlabhq_production
    postgresUser: gitlab
    postgresPassword: *global_gitlab_postgresPassword
    urlPrefix: /gitlab
    sudoToken: *global_gitlab_sudoToken
  keycloak:
    postgresDatabase: keycloak
    postgresUser: keycloak
    postgresPassword: *global_keycloak_postgresPassword
  jupyterhub:
    postgresDatabase: jupyterhub
    postgresUser: jupyterhub
    postgresPassword: *global_jupyterhub_postgresPassword
  gateway:
    clientSecret: *global_gateway_clientSecret
    gitlabClientId: *global_gateway_gitlabClientId
    gitlabClientSecret: *global_gateway_gitlabClientSecret
  renku:
    https: true
    domain: *mainURL
  graph:
    tokenRepository:
      postgresPassword: *global_graph_tokenRepository
    dbEventLog:
      postgresPassword: *global_graph_dbEventLog
  useHTTPS: true


gitlab:
  enabled: true
  image:
    pullPolicy: IfNotPresent
    repository: gitlab/gitlab-ce
    tag: 11.7.11-ce.0
  password: *gitlab_password
  ssh:
    externalPort: 22
    nodePortService:
      enabled: true
      nodePort: 32022
  persistence:
    existingClaim: renku-gitlab
  lfsObjects:
    enabled: true
    bucketName: lfs-objects
    connection: |-
      {
        'provider' => 'OpenStack',
        'openstack_auth_url' => 'https://keystone.---:5000/v3/auth/tokens',
        'openstack_username' => '---',
        'openstack_api_key' => '---',
        'openstack_domain_name' => 'Default',
        'openstack_project_id' => '---',
        'openstack_region' => '--',
        'openstack_temp_url_key' => '---'
      }
  registry:
    enabled: true
    externalUrl: *registryURL
    backendHealthcheck: false
    storage: |-
      {
        'swift' => {
          'authurl' => 'https://keystone.---:5000/v3',
          'username' => '---',
          'password' => '---',
          'region' => '--',
          'container' => 'registry',
          'tenantid' => '--',
          'domain' => '---'
        }
      }
    exposedAs: Ingress
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "0" # Adjust to a reasonable value for production to avoid DOS attacks.
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off" # Needed if GitLab is behind this ingress
      hosts:
      - *registryName
      tls:
      - hosts:
        - *registryName
        secretName: *registry_tls
  resources:
    requests:
      cpu: 1500m
      memory: 10Gi
    limits:
      cpu: 1500m
      memory: 10Gi
  redis:
    master:
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 512Mi
  sharedRunnersRegistrationToken: *gitlab_sharedRunnersRegistrationToken

ingress:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0" # Adjust to a reasonable value for production to avoid DOS attacks.
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off" # Needed if GitLab is behind this ingress
  enabled: true
  hosts:
  - *mainURL
  tls:
  - hosts:
    - *mainURL
    secretName: *ingress_tls

keycloak:
  enabled: true
  keycloak:
    username: admin
    password: *keycloak_password
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 2Gi

postgresql:
  postgresPassword: *postgresql_postgresPassword
  persistence:
    existingClaim: renku-postgresql
  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 1Gi

ui:
  ingress:
    enabled: false
  baseUrl: *baseURL
  gitlabUrl: *gitlabURL
  jupyterhubUrl: *jupyterhubURL
  gatewayUrl: *gatewayURL
  welcomePage:
    text: "Hello World 20190507"
      
  resources:
    <<: *defaultResources

notebooks:
  imageRegistry: *registryName
  serverOptions:
    cpu_request:
      default: 0.1
      options: [0.1, 0.5, 1.0, 2.0, 4.0]
    mem_request:
      default: 1G
      options: [1G, 2G, 4G, 8G]
    gpu_request:
      default: 0
      range: [0, 0] ## upgrade second value to number of GPUs per node
    defaultUrl:
      default: /lab
      options: [/lab, /rstudio]
    lfs_auto_fetch:
      default: false
  gitlab:
    ## specify the GitLab instance URL
    url: *gitlabURL
    registry:
      ## Set the default image registry
      host: *registryName
      ## Set the registry secret key
      secret: renku-notebooks-registry
  resources:
    <<: *defaultResources
  jupyterhub:
    rbac:
      enabled: true
    hub:
      cookieSecret: *nb_jupyterhub_hub_cookieSecret
      baseUrl: '/jupyterhub/'
      extraEnv:
        GITLAB_URL: *gitlabURL
        IMAGE_REGISTRY: *registryName
      db:
        type: postgres
        url: *nb_jupyterhub_hub_db_url
      services:
        notebooks:
          apiToken: *nb_jupyterhub_hub_services_notebooks_apiToken
        gateway:
          admin: true
          oauth_client_id: &gatewayClient gateway
          apiToken: *nb_jupyterhub_hub_services_gateway_apiToken
          oauth_redirect_uri: *oauth_redirect_uri
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /jupyterhub/hub/metrics
      resources:
        requests:
          cpu: 200m
          memory: 1Gi
        limits:
          cpu: 200m
          memory: 1Gi
    proxy:
      secretToken: *nb_jupyterhub_proxy_secretToken
      chp:
        resources:
          <<: *defaultResources
    auth:
      gitlab:
        clientId: *nb_jupyterhub_auth_gitlab_clientId
        clientSecret: *nb_jupyterhub_auth_gitlab_clientSecret
      state:
        enabled: true
        cryptoKey: *nb_jupyterhub_auth_state_cryptoKey

gateway:
  #keycloakUrl: *keycloakURL
  #gitlabUrl: *gitlabURL
  jupyterhub:
    clientId: *gatewayClient
    clientSecret: *nb_jupyterhub_hub_services_gateway_apiToken
  secretKey: *gateway_secretKey
  resources:
    <<: *defaultResources
  redis:
    master:
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 512Mi

tests:
  ## User accounts for running `helm test`
  ## Replace passwords with random strings in a production setup
  users_json:
   - username: bwayne
     firstName: Bruce
     lastName: Wayne
     email: bwayne@example.com
     password: ReplaceMewithA64charString
   - username: ckent
     firstName: Clark
     lastName: Kent
     email: ckent@example.com
     password: ReplaceMewithA64charString
